---
- name: Load OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars

- include_vars: ../vars/{{ ansible_os_family|lower }}.yml
- include_vars: ../../../group_vars/cloudera

- name: Add Cloudera Manager yum repository
  yum_repository:
    name: cloudera-manager
    description: Cloudera Manager
    baseurl: "{{ scm_repo_url }}"
    gpgkey: "{{ scm_repo_gpgkey }}"
    gpgcheck: yes
    enabled: yes
  when: 
  - ansible_os_family|lower == "redhat"

- include: jdk_install.yml

- include: jce_install.yml

- include: jce_config.yml

- name: setup java home in profile.d
  copy: src=java_home.sh dest=/etc/profile.d/

- name: Add apt key
  apt_key: keyserver=keyserver.ubuntu.com id={{ cloudera_repo_key }}
  when: ansible_os_family == "Debian"

- name: Ensure required packages are installed (yum)
  yum:
    name: "{{ item }}"
    update_cache: yes
    state: installed
  with_items: 
    - cloudera-manager-agent
    - cloudera-manager-daemons
  when: ansible_os_family == "RedHat"

- name: Ensure required packages are installed (apt)
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: installed
  with_items: "{{ package_info.pkgs }}"
  when: ansible_os_family == "Debian"

- name: Configure Cloudera Manager Agent 'server_host'
  lineinfile:
    dest: /etc/cloudera-scm-agent/config.ini
    regexp: "^server_host"
    line: "server_host={{ hostvars[groups['cm_node'][0]]['ansible_nodename'] }}"

- name: Restart Cloudera Manager Agents
  service:
    name: cloudera-scm-agent
    state: restarted
    enabled: yes

- include: unbound-dns.yml
  when: use_dns

- name: Enable the Cloudera agent
  service: name=cloudera-scm-agent state=restarted enabled=yes
